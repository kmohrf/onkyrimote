stages:
  - test
  - build
  - release

.run_tests: &run_tests
  stage: test
  variables:
    TOX_SKIP_ENV: lint
  before_script:
    - pip install tox
  script:
    - tox -v

lint:
  <<: *run_tests
  image: python:3.8-buster
  variables:
    TOX_SKIP_ENV: test-*

test:python35:
  <<: *run_tests
  image: python:3.5-alpine

test:python36:
  <<: *run_tests
  image: python:3.6-alpine

test:python37:
  <<: *run_tests
  image: python:3.7-alpine

test::python38:
  <<: *run_tests
  image: python:3.8-alpine

test::python-next:
  <<: *run_tests
  image: python:rc-alpine

build::arch-package:
  stage: build
  image: git-registry.hack-hro.de:443/kmohrf/docker-recipes/archbuild-python
  before_script:
    - "echo '%wheel ALL=(ALL) NOPASSWD: ALL' >/etc/sudoers.d/build"
    - useradd --create-home --user-group --groups wheel build
  script:
    - PKGEXT='.pkg.tar.xz' su build -- makepkg --syncdeps
  artifacts:
    paths:
      - '*.pkg.tar.xz'
    expire_in: 1w

build::deb-package:
  stage: build
  image: git-registry.hack-hro.de:443/kmohrf/docker-recipes/debbuild-python:buster
  variables:
    PYBUILD_DISABLE: test
  script:
    - make dist-deb DEBIAN_BUILDPACKAGE_COMMAND="dpkg-buildpackage -sa --no-sign" DISABLE_PYTHON_TESTS=1
  artifacts:
    paths:
      - build/debian
    expire_in: 1w

build::info:
  image: alpine
  stage: build
  before_script:
    - apk add git
  script:
    - echo "VERSION=$(git describe --tags | sed 's/\([^-]*-\)g/r\1/;s/-/./g;s/^v//')" >>build.env
    - git log $(git describe --tags --abbrev=0 --first-parent HEAD^)..HEAD --pretty=format:'* %s' >CHANGELOG
  artifacts:
    name: CHANGELOG
    paths:
      - CHANGELOG
    reports:
      dotenv: build.env

release::arch-package:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build::arch-package
      artifacts: true
    - job: build::info
      artifacts: true
  script:
    - echo "Storing Arch Linux Package"
  artifacts:
    name: Package for ArchLinux and Derivates
    paths:
      - "python-onkyrimote-$VERSION-1-any.pkg.tar.xz"
    expire_in: never

release::deb-package:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build::deb-package
      artifacts: true
  script:
    - echo "Storing Deb Package"
  artifacts:
    name: Package for Debian and Derivates
    paths:
      - build/debian
    expire_in: never

release::info:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build::info
      artifacts: true
  script:
    - echo "Creating release for $CI_COMMIT_TAG"
    - release-cli create --name "Release $CI_COMMIT_TAG" --tag-name "$CI_COMMIT_TAG" --description "$(cat CHANGELOG)"
